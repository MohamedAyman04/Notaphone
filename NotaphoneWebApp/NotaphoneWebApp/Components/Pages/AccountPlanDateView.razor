@page "/AccountPlanDateView"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Account Plan Date</PageTitle>

<h1>Account Plan Date</h1>

@if (Accounts == null || Accounts.Count == 0)
{
    <p>No Active Benefits are available</p>
}

<input type="date" placeholder="date" @bind="inputDate" @bind:format="yyyy-mm-dd" />
<input type="number" placeholder="plan id" @bind="inputPlanID"/>

<button @onclick=Submit>Submit</button>

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Mobile no.</th>
                <th>Plan ID</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tuple in Accounts)
            {
                <tr>
                    <td>@tuple.MobileNo</td>
                    <td>@tuple.PlanId</td>
                    <td>@tuple.Name</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<AccountPlanDateResult> Accounts = new();
    DateTime inputDate;
    int inputPlanID;
    bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    }

    async void Submit()
    {
		using var context = DbFactory.CreateDbContext();
		Accounts = await context.Database
			.SqlQuery<AccountPlanDateResult>($"Select * from dbo.Account_Plan_Date({inputDate}, {inputPlanID})")
			.ToListAsync();

		loading = false;

		StateHasChanged();
	}
}
