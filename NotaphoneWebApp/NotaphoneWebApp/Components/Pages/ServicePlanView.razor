@page "/ServicePlanView"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Service Plan Details</PageTitle>

<h1>Service Plan Details</h1>

@if (servicePlans == null || servicePlans.Count == 0)
{
    <p>No services are available</p>
}

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Plan ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>SMS Offered</th>
                <th>Minutes Offered</th>
                <th>Data Offered</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var plan in servicePlans)
            {
                <tr>
                    <td>@plan.PlanId</td>
                    <td>@plan.Name</td>
                    <td>@plan.Price</td>
                    <td>@plan.SmsOffered</td>
                    <td>@plan.MinutesOffered</td>
                    <td>@plan.DataOffered</td>
                    <td>@plan.Description</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<AllServicePlan> servicePlans = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        servicePlans = await context.AllServicePlans.ToListAsync();
    }
}
