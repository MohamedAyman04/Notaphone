@page "/PastService5"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Service Plans 5 month</PageTitle>

<h1>Service plans in the past 5 month</h1>

@if (ServicePlans == null || ServicePlans.Count == 0)
{
    <p>No available service plans</p>
}

<form @onsubmit=Submit>
	<div class="form-style">
		<input type="text" id="mobileno" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>

        <button type="submit">Submit</button>
	</div>
</form>

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Plan ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>SMS Offered</th>
                <th>Minutes Offered</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Service in ServicePlans)
            {
                <tr>
                    <td>@Service.PlanId</td>
                    <td>@Service.Name</td>
                    <td>@Service.Price</td>
                    <td>@Service.SMSOffered</td>
                    <td>@Service.MinutesOffered</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<SubscribedPlans5MonthsResult> ServicePlans = new();
    public string mobileNo = "";

    async void Submit()
    {
        using var context = DbFactory.CreateDbContext();
        ServicePlans = await context.Database
        .SqlQuery<SubscribedPlans5MonthsResult>(
        $"Select * from dbo.Subscribed_plans_5_Months({mobileNo})"
        ).ToListAsync();

    }
}
