@page "/RemainingAmount"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Remaining Amount</PageTitle>

<h1>Remaining Amount</h1>

<div class="form-style">
	<form @onsubmit=Submit>
		<input type="text" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>
		<input type="text" maxlength="11" title="plan name" placeholder="plan name" @bind="planName" required/>

		<button type="submit">Submit</button>
	</form>
</div>


<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Remaining Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rem in Remaining)
            {
                <tr>
                    <td>@rem</td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code {
    private List<int> Remaining = new();
    public string mobileNo = "";
    public string planName = "";

    private async Task Submit()
    {
        using var context = DbFactory.CreateDbContext();

        Remaining = await context.Database
        .SqlQuery<int>
        (
            $"Select dbo.Remaining_plan_amount ({mobileNo}, {planName})"
        )
        .ToListAsync();
        
        
        StateHasChanged();
    }
}
