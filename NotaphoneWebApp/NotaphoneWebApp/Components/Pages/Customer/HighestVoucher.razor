@page "/HighestVoucher"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Highest Voucher</PageTitle>

<h1>Highest Voucher</h1>

<form @onsubmit=Submit>
	<div class="form-style">
		<input type="text" id="mobileno" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>

        <button type="submit">Submit</button>
	</div>
</form>

<div class="table-container">


    <table class="styled-table">
        <thead>
            <tr>
                <th>Voucher ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var voucher in vouchers)
            {
                <tr>
                    <td>@voucher</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (loading)
{
    <div class="loader"></div>
}

<p>@error</p>

@if ((vouchers == null || vouchers.Count == 0) && done)
{
    <p>No services available</p>
}

@code {
    private List<int> vouchers = new();
    public String mobileNo = "";
    private bool loading = false;
    private string error = "";
    private bool done = false;

    public async void Submit()
    {
        using var context = DbFactory.CreateDbContext();
        vouchers = await context.Database.SqlQuery<int>($"execute Account_Highest_Voucher {mobileNo}").ToListAsync();
        Console.WriteLine("done");
        StateHasChanged();
    }
}
