@page "/PlanUsageShow"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Plan Usage in the Current Month</PageTitle>

<h1>Plan Usage</h1>

<form @onsubmit=Submit>
	<div class="form-style">
		<input type="text" id="mobileno" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>

        <button type="submit">Submit</button>
	</div>
</form>

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <td>Data Consumption</td>
                <td>Minutes Used</td>
                <td>SMS Sent</td>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var usage in usagePlan)
            {
                <tr>
                    <td>@usage.DataConsumption</td>
                    <td>@usage.MinutesUsed</td>
                    <td>@usage.SMSSent</td>
                    
                </tr>
            }
        </tbody>
    </table>
</div>

@if (usagePlan == null || usagePlan.Count == 0)
{
    <p>No services are available</p>
}

@code {
    private List<UsagePlanCurrentMonthResult> usagePlan = new();
    private bool isLoading = true;
    public string mobileNo = "";


    private async Task Submit()
    {
        using var context = DbFactory.CreateDbContext();
        usagePlan = await context.Database
            .SqlQuery<UsagePlanCurrentMonthResult>($"Select * from dbo.Usage_Plan_CurrentMonth({mobileNo})"
		 	).ToListAsync();
        
        usagePlan.ForEach(Console.WriteLine);


        StateHasChanged();

    }
}