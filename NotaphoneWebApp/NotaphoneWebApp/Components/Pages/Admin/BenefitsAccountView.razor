@page "/BenefitsAccountView"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Benefits Account</PageTitle>

<h1>Benefits Account</h1>

<div class="form-style">
	<form @onsubmit=Submit>
		<input type="text" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>
		<input type="number" step="1" min="1" title="plan id" placeholder="plan id" @bind="planID" required/>

		<button type="submit">Submit</button>
	</form>
</div>

<div class="table-container">
    <p>Wont tell you if it's done</p>
</div>

@code {
    string? mobileNo;
    int? planID;
    bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    }

    async void Submit()
    {
		using var context = DbFactory.CreateDbContext();
		var rowsAffected = await context.Database.
			ExecuteSqlAsync(
				$"exec Benefits_Account {mobileNo}, {planID}"
			);

		loading = false;

		StateHasChanged();
	}
}
