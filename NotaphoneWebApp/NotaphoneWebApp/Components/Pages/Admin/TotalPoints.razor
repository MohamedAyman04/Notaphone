@page "/TotalPoints"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Update Total Points</PageTitle>

<h1>Update Total Points</h1>

<div class="form-style">
	<form @onsubmit=Submit>
		<input type="text" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>

		<button type="submit">Submit</button>
	</form>
</div>

@if (isDone)
{
    <p>@rowsAffected rows affected</p>
}

@code {
    private int? rowsAffected = 0;
    private bool isDone = false;
    public string? mobileNo = "";

    private async Task Submit()
    {
        rowsAffected = 0;
        try
        {
            isDone = false;
            using var context = DbFactory.CreateDbContext();

            rowsAffected = context.Database
                .ExecuteSql($"execute Total_Points_Account {mobileNo}");

            Console.WriteLine("done");
            isDone = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            isDone = false;
        }

        StateHasChanged();
    }
}
