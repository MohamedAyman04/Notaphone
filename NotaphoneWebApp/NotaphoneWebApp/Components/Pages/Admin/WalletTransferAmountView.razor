@page "/WalletTransferAmountView"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Wallet Transfer</PageTitle>

<h1>Wallet Transfer</h1>

<div class="form-style">
	<form @onsubmit=Submit>
		<input type="number" step="1" min="1" title="wallet id" placeholder="wallet id" @bind="walletID" required/>
		<input type="date" title="start date" @bind="startDate" @bind:format="yyyy-MM-dd" required/>
		<input type="date" title="end date" @bind="endDate" @bind:format="yyyy-MM-dd" required/>

		<button type="submit">Submit</button>
	</form>
</div>


<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Wallet</th>
            </tr>
        </thead>
	    <tbody>
		    @foreach (var wallet in wallterTransferAmount)
		    {
			    <tr>
				    <td>@wallet</td>
			    </tr>
		    }
	    </tbody>
    </table>
</div>

@code {
    private List<int> wallterTransferAmount = new();
    public int? walletID;
    public DateTime? startDate;
    public DateTime? endDate;

    private async Task Submit()
    {
        using var context = DbFactory.CreateDbContext();
        wallterTransferAmount = await context.Database
            .SqlQuery<int>($"SELECT dbo.Wallet_Transfer_Amount({walletID}, {startDate}, {endDate})")
            .ToListAsync();
        StateHasChanged();
    }
}
