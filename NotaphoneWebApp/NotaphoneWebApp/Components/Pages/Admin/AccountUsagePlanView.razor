@page "/AccountUsagePlanView"
@rendermode InteractiveServer
@inject IDbContextFactory<ApplicationDbContext> DbFactory;

<PageTitle>Account Usage Plan</PageTitle>

<h1>Account Usage Plan</h1>

<form @onsubmit=Submit>
    <div class="form-style">
        <div class="together">
            <label for="mob">Mobile Number</label>
            <input type="text" id="mob" maxlength="11" pattern="[0-9]{11}" title="11-digit mobile no" placeholder="mobile no" @bind="mobileNo" required/>
        </div>
        <div class="together">
            <label for="id">Start Date</label>
            <input type="date" id="id" @bind="inputDate" @bind:format="yyyy-MM-dd" required/>
        </div>
        <button type="submit">Submit</button>
    </div>
</form>

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Plan ID</th>
                <th>Total data</th>
                <th>Total minutes</th>
                <th>Total sms</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tuple in AccountUsages)
            {
                <tr>
                    <td>@tuple.PlanId</td>
                    <td>@tuple.TotalData</td>
                    <td>@tuple.TotalMinutes</td>
                    <td>@tuple.TotalSMS</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (loading)
{
    <div class="loader"></div>
}

<p>@error</p>

@if ((AccountUsages == null || AccountUsages.Count == 0) && done)
{
    <p>No Account plan usage available</p>
}

@code {
    private List<AccountUsagePlanResult> AccountUsages = new();
    DateTime? inputDate;
    string? mobileNo;
    bool loading = false;
    bool done = false;
    string error = "";

    async void Submit()
    {
        try {
            loading = true;
            await Task.Yield();
            using var context = DbFactory.CreateDbContext();
            AccountUsages = await context.Database
                .SqlQuery<AccountUsagePlanResult>(
                    $"Select * from dbo.Account_Usage_Plan({mobileNo}, {inputDate})"
                ).ToListAsync();
            done = true;
        } catch (Exception err) {
            error = err.Message;
        }
        finally {
            loading = false;
            StateHasChanged();
        }
	}
}
